{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","useState","isReverse","setReverse","sortedBy","setSortedBy","lengthLimit","setLengthLimit","sortSwitch","currentSort","prev","preparedList","filter","good","length","sort","g1","g2","localeCompare","reverse","className","type","onClick","value","name","onChange","event","target","defaultValue","Array","from","keys","slice","map","num","goodsFromServer","App","listShown","setListShown","ReactDOM","render","document","getElementById"],"mappings":"oMAQaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,EAAgCC,oBAAkB,GAAlD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAe,WAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,mBAAiB,GAAvD,mBAAOK,EAAP,KAAoBC,EAApB,KAMA,SAASC,EAAWC,GAClBJ,GAAY,SAAAK,GACV,OAAIA,IAASD,EACJ,UAGFA,KAIX,IAcME,EAAeX,EAAMY,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUR,KAmBzD,OAjBAK,EAAaI,MAAK,SAACC,EAAIC,GACrB,OAAQb,GACN,IAAK,WACH,OAAOY,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOD,EAAGF,OAASG,EAAGH,OAExB,QACE,OAAO,MAITZ,GACFS,EAAaQ,UAIb,sBAAKC,UAAU,UAAf,UACE,sBACEA,UAAU,kEADZ,UAQE,wBACEC,KAAK,SACLC,QAzCe,WACrBjB,EAAY,WACZF,GAAW,GACXI,EAAe,IAuCTa,UAAU,wBAHZ,mBAOA,wBACEC,KAAK,SACLC,QAlEiB,WACvBnB,GAAW,SAAAO,GAAI,OAAKA,MAkEdU,UAAU,uBAHZ,qBAOA,wBACEC,KAAK,SACLC,QA3DmB,kBAAMd,EAAW,aA4DpCY,UAAU,uBAHZ,iCAOA,wBACEC,KAAK,SACLC,QAhEqB,kBAAMd,EAAW,WAiEtCY,UAAU,uBAHZ,4BAQA,gCACE,8CAEA,qBAAKA,UAAU,SAAf,SACE,wBACEG,MAAOjB,EACPkB,KAAK,SACLC,SArEe,SAACC,GAC1BnB,GAAgBmB,EAAMC,OAAOJ,QAqEnBK,aAActB,EAJhB,SAMIuB,MAAMC,KAAKD,MAAM,IAAIE,QAAQC,MAAM,GAAGC,KAAI,SAAAC,GAAG,OAC7C,wBAEEX,MAAOW,EAFT,SAIGA,GAHIA,gBAWjB,oBAAId,UAAU,SAAd,SACGT,EAAasB,KAAI,SAAApB,GAAI,OACpB,oBAEEO,UAAU,8BAFZ,SAQGP,GAPIA,YCzHXsB,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiCaC,EA9BO,WACpB,MAAkCnC,oBAAS,GAA3C,mBAAOoC,EAAP,KAAkBC,EAAlB,KAMA,OACE,sBACElB,UAAU,6BADZ,UAME,oBAAIA,UAAU,+BAAd,mBACCiB,EACG,cAAC,EAAD,CAAWrC,MAAOmC,IAElB,wBACEd,KAAK,SACLC,QAjBa,kBACrBgB,GAAa,SAAA5B,GAAI,OAAKA,MAiBdU,UAAU,kCAHZ,uBChCVmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.16735311.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\ntype Sort = 'length' | 'alphabet' | 'default';\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  const [isReverse, setReverse] = useState<boolean>(false);\n  const [sortedBy, setSortedBy] = useState<Sort>('default');\n  const [lengthLimit, setLengthLimit] = useState<number>(1);\n\n  const handleReverseBtn = () => {\n    setReverse(prev => !prev);\n  };\n\n  function sortSwitch(currentSort: Sort) {\n    setSortedBy(prev => {\n      if (prev === currentSort) {\n        return 'default';\n      }\n\n      return currentSort;\n    });\n  }\n\n  const handleAlphtSortBtn = () => sortSwitch('alphabet');\n\n  const handleLengthtSortBtn = () => sortSwitch('length');\n\n  const handleResetBtn = () => {\n    setSortedBy('default');\n    setReverse(false);\n    setLengthLimit(1);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setLengthLimit(+event.target.value);\n  };\n\n  const preparedList = goods.filter(good => good.length >= lengthLimit);\n\n  preparedList.sort((g1, g2) => {\n    switch (sortedBy) {\n      case 'alphabet':\n        return g1.localeCompare(g2);\n\n      case 'length':\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReverse) {\n    preparedList.reverse();\n  }\n\n  return (\n    <div className=\"columns\">\n      <div\n        className=\"\n          is-flex\n          is-flex-direction-column\n          mr-6\n          column is-4 is-offset-8\n        \"\n      >\n        <button\n          type=\"button\"\n          onClick={handleResetBtn}\n          className=\"button mb-2 is-danger\"\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleReverseBtn}\n          className=\"button mb-2 is-light\"\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleAlphtSortBtn}\n          className=\"button mb-2 is-light\"\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleLengthtSortBtn}\n          className=\"button mb-2 is-light\"\n        >\n          Sort by length\n        </button>\n\n        <div>\n          <span>Length &gt;= </span>\n\n          <div className=\"select\">\n            <select\n              value={lengthLimit}\n              name=\"select\"\n              onChange={handleSelectChange}\n              defaultValue={lengthLimit}\n            >\n              { Array.from(Array(11).keys()).slice(1).map(num => (\n                <option\n                  key={num}\n                  value={num}\n                >\n                  {num}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <ul className=\"column\">\n        {preparedList.map(good => (\n          <li\n            key={good}\n            className=\"\n              panel-block\n              subtitle\n              is-5\n            \"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [listShown, setListShown] = useState(false);\n\n  const handleStartBtn = () => (\n    setListShown(prev => !prev)\n  );\n\n  return (\n    <div\n      className=\"\n        container\n        is-max-desktop\n      \"\n    >\n      <h1 className=\"title is-1 has-text-centered\">Goods</h1>\n      {listShown\n        ? <GoodsList goods={goodsFromServer} />\n        : (\n          <button\n            type=\"button\"\n            onClick={handleStartBtn}\n            className=\"is-fullwidth button is-success \"\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}